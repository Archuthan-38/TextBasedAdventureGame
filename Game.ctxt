#BlueJ class context
comment0.target=Game
comment0.text=\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "A\ day\ in\ KCL\ with\ a\ Twist"\ application.\ \n\ \ "A\ day\ in\ KCL\ with\ a\ Twist"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\n\ \ must\ explore\ the\ campus\ all\ while\ attending\ their\ lab,\ lecture\ and\ exam\ on\ time.\ \n\ \ Many\ secrets\ to\ be\ discovered...\n\ \n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\n\ \ method.\n\ \n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes\ and\ Archuthan\ Mohanathasan\n\ @version\ 2016.02.29\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=void\ printHelp()
comment10.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
comment11.params=command
comment11.target=void\ give(Command)
comment11.text=\n\ Enables\ player\ to\ give\ items\ to\ characters\n\ Currently\ only\ one\ character\ (wizard,\ who\ is\ looking\ for\ a\ sandwich)\n
comment12.params=command
comment12.target=void\ talk(Command)
comment12.text=\n\ Talking\ to\ a\ character\ provides\ imformation\ to\ the\ player\n
comment13.params=command
comment13.target=void\ teleport(Command)
comment13.text=\n\ Teleport\ command\ enables\ player\ to\ travel\ to\ a\ random\ room.\n\ Can\ only\ be\ used\ when\ inside\ the\ teleporter\ room.\n\ Boolean\ inRoom\ ensures\ player\ has\ entered\ the\ room\ (i.e\ teleport\ command\ can't\ be\ called\ when\ \n\ outside\ teleporter\ room.\n
comment14.params=command
comment14.target=boolean\ getResults(Command)
comment14.text=\n\ getResults\ command\ enables\ user\ to\ get\ their\ exam\ results.\n\ The\ earliest\ this\ command\ can\ be\ executed\ is\ at\ 20\:00\ (scheduled\ end\ of\ game\ is\ exam\ was\ writen).\n\ @return\ true\ (to\ end\ the\ game)\ if\ results\ collected\ (i.e.\ game\ will\ not\ end\ from\ this\ command\ if\n\ results\ cannot\ be\ collected.\n
comment15.params=command
comment15.target=void\ revise(Command)
comment15.text=\nrevise\ command\ enables\ player\ to\ reduce\ penalty\ points\ via\ revision.\nCan\ only\ be\ called\ when\ inside\ (simply\ being\ outside\ room\ is\ not\ sufficient)\ group\ study,\ \nindependent\ study\ 1\ or\ 2\ rooms.\nPlayer\ must\ also\ be\ carrying\ exam\ notes\ in\ their\ inventory\ to\ revise.\n
comment16.params=command
comment16.target=void\ drinkCoffee(Command)
comment16.text=\n\ drinkCoffee\ command\ also\ removes\ penalty\ points.\n\ Can\ only\ be\ executed\ if\ player\ is\ carrying\ coffee.\n
comment17.params=command
comment17.target=void\ pickUp(Command)
comment17.text=\n\ Picks\ up\ item\ and\ adds\ it\ to\ player's\ inventory.\n
comment18.params=command
comment18.target=void\ drop(Command)
comment18.text=\n\ Drops\ item\ and\ removes\ it\ from\ player's\ inventory.\n
comment19.params=command
comment19.target=void\ restart(Command)
comment19.text=\n\ This\ command\ takes\ you\ back\ all\ the\ way\ to\ the\ start.\ This\ will\ reset\ the\ game.\n\ Any\ items\ you\ have\ before\ this\ command\ are\ taken\ away.\n
comment2.params=
comment2.target=Game()
comment2.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\n
comment20.params=command
comment20.target=void\ enterRoom(Command)
comment20.text=\n\ Used\ to\ enter\ rooms.\n
comment21.params=command
comment21.target=void\ wait(Command)
comment21.text=\n\ wait\ command\ used\ to\ wait\ in\ a\ queue.\ This\ must\ be\ done\ before\ obtaining\ certain\ items\ from\ certian\ rooms.\n
comment22.params=command
comment22.target=void\ goRoom(Command)
comment22.text=\ \n\ Tries\ to\ go\ in\ a\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n
comment23.params=command
comment23.target=void\ goBack(Command)
comment23.text=\n\ goBack\ command\ takes\ player\ to\ the\ previous\ room\ they\ were\ in\ via\ doing\ the\ opposite\ of\ the\ previous\ command.\n
comment24.params=command
comment24.target=boolean\ quit(Command)
comment24.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
comment25.params=where
comment25.target=void\ reverse(java.lang.String)
comment25.text=\n\ This\ method\ is\ used\ to\ get\ the\ previous\ room\ and\ to\ update\ time\ display\ (according\ to\ how\ long\ it\ took\n\ to\ get\ to\ prev\ room).\n\ @param\ where\ is\ the\ exit\ key\ (opposite\ to\ what\ was\ found\ in\ previous\ command\ ->\ allows\ player\ to\ go\ back)\n
comment26.params=name
comment26.target=boolean\ allowed(java.lang.String)
comment26.text=\n\ This\ method\ checks\ whether\ or\ not\ the\ player\ has\ access\ to\ a\ specific\ room.\ \n\ (some\ rooms\ need\ lanyard\ to\ enter).\n\ @return\ true\ if\ player\ has\ access\ to\ a\ specific\ room.\n
comment27.params=
comment27.target=java.lang.String\ examNotesLocation()
comment27.text=\n\ This\ randomly\ picks\ where\ exam\ notes\ item\ will\ be\ found.\n\ Returns\ the\ name\ of\ which\ room\ notes\ will\ be\ found.\n
comment28.params=
comment28.target=java.lang.String\ whichLab()
comment28.text=\n\ This\ randomly\ picks\ which\ lab\ the\ player\ will\ be\ told\ to\ go\ to.\n\ Returns\ the\ name\ of\ the\ lab\ that\ player\ will\ need\ to\ go\ to.\n
comment29.params=
comment29.target=void\ fillLabs()
comment29.text=\n\ Player\ can\ either\ be\ assigned\ to\ computing\ lab\ 1\ or\ 2.\n\ This\ method\ creates\ a\ list\ to\ store\ possible\ labs.\n
comment3.params=
comment3.target=void\ startingBooleans()
comment3.text=\n\ This\ initialises\ all\ the\ boolean\ variables\ to\ false;\ this\ needs\ to\ be\ done\n\ at\ the\ start\ of\ every\ new\ game.\n
comment30.params=
comment30.target=void\ fillNotesLocations()
comment30.text=\n\ Adds\ all\ the\ locations\ that\ player's\ exam\ notes\ can\ be\ found\ to\ locationNotes\ ArrayList.\n
comment31.params=
comment31.target=boolean\ queue()
comment31.text=\n\ Some\ rooms\ have\ a\ queue,\ others\ do\ not.\n\ @return\ true\ if\ room\ player\ has\ currently\ entered\ has\ a\ queue.\n
comment32.params=
comment32.target=int\ calcWaitTime()
comment32.text=\n\ Generates\ random\ waiting\ time.\n
comment33.params=
comment33.target=void\ interact()
comment33.text=\n\ States\ the\ interactions\ at\ different\ rooms.\n
comment34.params=
comment34.target=void\ itemsPresent()
comment34.text=\n\ Different\ rooms\ have\ different\ items.\n\ This\ method\ assigns\ different\ items\ to\ currentItem\ when\ in\ different\ rooms.\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\n
comment5.params=
comment5.target=void\ createItems()
comment5.text=\n\ Creates\ all\ items;\ item\ stores\ information\ about\ it,\ name\ (in\ string)\ \n\ and\ its\ weight.\n
comment6.params=
comment6.target=void\ createCharacter()
comment6.text=\n\ Creates\ NPC\ (wizard);\ wizard\ spawns\ outside\ (with\ player)\n\ \n
comment7.params=
comment7.target=void\ play()
comment7.text=\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\n
comment8.params=
comment8.target=void\ printWelcome()
comment8.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player\ and\ spawns\ wizard\ outside\ too.\n
comment9.params=command
comment9.target=boolean\ processCommand(Command)
comment9.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\ (returns\ true\ when\ quit\ command\ is\ run)\n
numComments=35
